name: Deploy to Cloud Run

run-name: "Deploy ${{ github.ref_name }} to [ ${{ inputs.environment }} ]"

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment to deploy to"
        required: true
        default: "production"
        type: choice
        options:
          - production
          - testing

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      SERVICE_NAME: engagement-app-api
      PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      REGION: ${{ secrets.GCP_REGION }}
      SERVICE_ACCOUNT_KEY: ${{ secrets.GCP_SA_KEY }}
      CI: false

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: "14"

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Set up Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v0.2.0
      with:
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        export_default_credentials: true

    - name: Configure Docker
      run: |
        gcloud auth configure-docker

    - name: Build Docker image
      run: |
        if [ "${{ github.event.inputs.environment }}" == "production" ]; then
          export BUILD_ENV=prod
        else
          export BUILD_ENV=test
        fi
        IMAGE_TAG=gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ github.event.inputs.environment }}-$SERVICE_NAME:${{ github.sha }}
        docker build --build-arg REACT_APP_ENV=$BUILD_ENV -t $IMAGE_TAG .
        docker push $IMAGE_TAG

    - name: Deploy to Cloud Run
      run: |
        gcloud run deploy $SERVICE_NAME \
          --image gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ github.event.inputs.environment }}-$SERVICE_NAME:${{ github.sha }} \
          --platform managed \
          --region ${{ secrets.GCP_REGION }} \
          --allow-unauthenticated
