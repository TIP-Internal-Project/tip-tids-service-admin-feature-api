name: Deploy to Cloud Run
run-name: "Deploy ${{ github.ref_name }} to [ ${{ inputs.environment }} ]"

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment to deploy to"
        required: true
        default: "production"
        type: choice
        options:
          - production
          - testing

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      SERVICE_NAME: engagement-app-api
      PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
      REGION: ${{ secrets.GCP_REGION }}
      CI: false

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "14"

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Set up Google Cloud SDK
        uses: google-github-actions/setup-gcloud@v0.2.0
        with:
          service_account_key: ${{ secrets.GCP_SA_KEY }}
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          export_default_credentials: true

      - name: Configure Docker
        run: gcloud auth configure-docker

      - name: Set environment variables for PRODUCTION
        if: github.event.inputs.environment == 'production'
        run: |
          echo "REACT_APP_ENV=production" >> $GITHUB_ENV
          gcloud secrets versions access latest --secret=ENGAGEMENT_APP_KEY_JSON > engagementAppKey.json
          ENGAGEMENT_APP_KEY_JSON=$(cat engagementAppKey.json | base64 -w0)
          echo "ENGAGEMENT_APP_KEY_JSON=$ENGAGEMENT_APP_KEY_JSON" >> $GITHUB_ENV
          gcloud secrets versions access latest --secret=ENGAGEMENT_APP_CREDS_PR > creds.json
          CREDS_JSON=$(cat creds.json | base64 -w0)
          echo "CREDS_JSON=$CREDS_JSON" >> $GITHUB_ENV

      - name: Set environment variables for TESTING
        if: github.event.inputs.environment == 'testing'
        run: |
          echo "REACT_APP_ENV=testing" >> $GITHUB_ENV
          gcloud secrets versions access latest --secret=ENGAGEMENT_APP_KEY_JSON > engagementAppKey.json
          ENGAGEMENT_APP_KEY_JSON=$(cat engagementAppKey.json | base64 -w0)
          echo "ENGAGEMENT_APP_KEY_JSON=$ENGAGEMENT_APP_KEY_JSON" >> $GITHUB_ENV
          gcloud secrets versions access latest --secret=ENGAGEMENT_APP_CREDS_QA > creds.json
          CREDS_JSON=$(cat creds.json | base64 -w0)
          echo "CREDS_JSON=$CREDS_JSON" >> $GITHUB_ENV

      - name: Build Docker image
        run: |
          IMAGE_TAG=gcr.io/${{ secrets.GCP_PROJECT_ID }}/$REACT_APP_ENV-$SERVICE_NAME:${{ github.sha }}
          docker build --build-arg NODE_ENV=${{ github.event.inputs.environment }} \
                       --build-arg CREDS_JSON=${{ env.CREDS_JSON }} \
                       --build-arg ENGAGEMENT_APP_KEY_JSON=${{ env.ENGAGEMENT_APP_KEY_JSON }} \
                       -t $IMAGE_TAG .
          docker push $IMAGE_TAG

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy $REACT_APP_ENV-$SERVICE_NAME \
            --image gcr.io/${{ secrets.GCP_PROJECT_ID }}/$REACT_APP_ENV-$SERVICE_NAME:${{ github.sha }} \
            --platform managed \
            --region ${{ secrets.GCP_REGION }} \
            --allow-unauthenticated
            --port 3001
